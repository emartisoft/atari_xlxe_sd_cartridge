losnd	 equ	$800
hisnd	 equ	$900

fsel_backup equ	$4000

command	 equ	$d5e8
sec_offs equ	$d5e9
sec_cnt	 equ	$d5ea
sec_num	 equ	$d5eb
cart_ena equ	$d5ef

	opt	h+f-
	org	$2000

main
	; prepare sound lookup tables
	ldx	#0
precalc_sound
	txa
	and	#$0f
	ora	#$10
	sta	losnd,x
	txa
	lsr	@
	lsr	@
	lsr	@
	lsr	@
	ora	#$10
	sta	hisnd,x
	inx
	bne	precalc_sound

	; turn on cartridge memory
	sei
	mva	#$c1	cart_ena
	nop
	mva	$d013	$3fa
	cli
	lda	cart_ena
	cmp	#$ff
	bne	hardware
	rts			; emulator detected
hardware

	; save file selector
	ldx	#0
copy_loop
copy_src
	lda	$8000,x
copy_dest
	sta	fsel_backup,x
	inx
	bne	copy_loop
	inc	copy_src+2
	inc	copy_dest+2
	lda	#$c0
	cmp	copy_src+2
	bne	copy_loop

	; skip head
	lda	#16
	add:sta	sec_num+0
	lda	#0
	adc:sta	sec_num+1
	lda	#0
	adc:sta	sec_num+2
	lda	#0
	adc:sta	sec_num+3

	mva	#$00	sec_offs
	mva	#16	sec_cnt
	mva	#$01	command

	lda	#$01
	bit:rne	command

	lda	#$00
	sta	$d40e
	lda	#124
	cmp:rne $d40b
	lda	#123
	cmp:rne	$d40b

play
	; start read A000
	lda	#16
	add:sta	sec_num
	lda	#0
	adc:sta	sec_num+1
	lda	#0
	adc:sta	sec_num+2
	lda	#0
	adc:sta	sec_num+3
	mva	#$10	sec_offs
	sta	sec_cnt
	mva	#$01	command
	; run 8000
	jsr	$8006+4
	; start read 8000
	lda	#16
	add:sta	sec_num
	lda	^1f
	eor	#7
	adc:sta	sec_num+1
	lda	#0
	adc:sta	sec_num+2
	lda	#0
	sta	sec_offs
	adc:sta	sec_num+3
	mva	#16	sec_cnt
	mva	#$01	command
	; run A000
	jsr	$a006+4
	jmp	play

end
	ini	main

	org	$8000
; pad to 8k
:8192-[end-main]-6-6-4 dta $ff
